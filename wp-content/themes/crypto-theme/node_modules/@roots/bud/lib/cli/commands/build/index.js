import BudCommand from '@roots/bud/cli/commands';
import ci from '@roots/bud/cli/flags/ci';
import clean from '@roots/bud/cli/flags/clean';
import dashboard from '@roots/bud/cli/flags/dashboard';
import dashboardAssets from '@roots/bud/cli/flags/dashboard.assets';
import dashboardCompact from '@roots/bud/cli/flags/dashboard.compact';
import dashboardEntrypoints from '@roots/bud/cli/flags/dashboard.entrypoints';
import dashboardServer from '@roots/bud/cli/flags/dashboard.server';
import devtool from '@roots/bud/cli/flags/devtool';
import discover from '@roots/bud/cli/flags/discover';
import dry from '@roots/bud/cli/flags/dry';
import editor from '@roots/bud/cli/flags/editor';
import entrypointsHtml from '@roots/bud/cli/flags/entrypoints.html';
import esm from '@roots/bud/cli/flags/esm';
import hash from '@roots/bud/cli/flags/hash';
import html from '@roots/bud/cli/flags/html';
import immutable from '@roots/bud/cli/flags/immutable';
import input from '@roots/bud/cli/flags/input';
import minimize from '@roots/bud/cli/flags/minimize';
import notify from '@roots/bud/cli/flags/notify';
import output from '@roots/bud/cli/flags/output';
import publicPath from '@roots/bud/cli/flags/publicPath';
import runtime from '@roots/bud/cli/flags/runtime';
import silent from '@roots/bud/cli/flags/silent';
import splitChunks from '@roots/bud/cli/flags/splitChunks';
import storage from '@roots/bud/cli/flags/storage';
import verbose from '@roots/bud/cli/flags/verbose';
import isBoolean from '@roots/bud-support/lodash/isBoolean';
/**
 * `bud build` command
 */
export default class BudBuildCommand extends BudCommand {
    /**
     * {@link BudCommand.paths}
     */
    static paths = [[`build`]];
    /**
     * {@link BudCommand.usage}
     */
    static usage = BudCommand.Usage({
        category: `build`,
        description: `Compile source assets`,
        details: `\
      \`bud build production\` compiles source assets in \`production\` mode. Run \`bud build production --help\` for usage.

      \`bud build development\` compiles source assets in \`development\` mode and serves updated modules. Run \`bud build development --help\` for usage.

      If you run this command without a configuration file \`bud\` will look for an entrypoint at \`@src/index.js\`.
    `,
    });
    [`dashboard.assets`] = dashboardAssets;
    [`dashboard.compact`] = dashboardCompact;
    [`dashboard.entrypoints`] = dashboardEntrypoints;
    [`dashboard.server`] = dashboardServer;
    [`dashboard`] = dashboard;
    [`entrypoints.html`] = entrypointsHtml;
    ci = ci;
    clean = clean;
    devtool = devtool;
    discover = discover;
    dry = dry(false);
    editor = editor;
    esm = esm;
    hash = hash;
    html = html;
    immutable = immutable;
    input = input;
    minimize = minimize;
    notify = notify;
    output = output;
    publicPath = publicPath;
    runtime = runtime;
    silent = silent(false);
    splitChunks = splitChunks;
    storage = storage;
    verbose = verbose;
    /**
     * {@link BudCommand.execute}
     */
    async execute() {
        await this.makeBud();
        if (isBoolean(this[`entrypoints.html`])) {
            this.bud.entrypoints.set(`emitHtml`, this[`entrypoints.html`]);
        }
        await this.bud.run();
    }
}
