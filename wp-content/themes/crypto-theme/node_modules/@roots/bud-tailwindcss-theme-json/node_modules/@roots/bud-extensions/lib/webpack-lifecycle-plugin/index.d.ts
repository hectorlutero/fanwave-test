import type { Compilation, Compiler, WebpackError } from '@roots/bud-framework/config';
import { Extension } from '@roots/bud-framework/extension';
/**
 * Webpack lifecycle plugin
 */
export default class BudWebpackLifecyclePlugin extends Extension {
    afterCompile(compilation: Compilation): void;
    /**
     * {@link Extension.apply}
     * {@link WebpackPluginInstance.apply}
     */
    apply(compiler: Compiler): void;
    assetEmitted(file: string, info: {
        compilation: Compilation;
        content: string;
        outputPath: string;
        source: string;
        targetPath: string;
    }): void;
    beforeCompile(compilation: Compilation): void;
    emit(compilation: Compilation): void;
    failed(error: Error & Partial<WebpackError> & {
        error?: Error;
    }): Error & Partial<WebpackError> & {
        error?: Error;
    };
    shouldEmit(): boolean;
}
