import { jsx as _jsx, jsxs as _jsxs } from "@roots/bud-support/jsx-runtime";
import { platform } from 'node:os';
import { Error } from '@roots/bud-dashboard/components/error';
import { BudError } from '@roots/bud-support/errors';
import figures from '@roots/bud-support/figures';
import { Box, Text } from '@roots/bud-support/ink';
export const Doctor = ({ name, timings }) => {
    return (_jsxs(Box, { flexDirection: "column", gap: 1, marginTop: 1, children: [_jsx(Text, { bold: true, children: name }), _jsx(Text, { italic: true, children: `Completed a dry run of your project's build (executed in ${timings.build} seconds). If the information provided by this command doesn't yield a solution consider running \`yarn bud repl\` and exploring the finalized config (\`bud.build.config\`).` }), _jsx(Process, {})] }));
};
const Process = () => {
    const nodeGood = process.version.match(/v1[7|8|9]/);
    const nodeWarn = process.version.match(/v16/);
    const nodeBad = !nodeGood && !nodeWarn;
    const nodeColor = nodeGood ? `green` : nodeWarn ? `yellow` : `red`;
    const nodeFigure = nodeGood
        ? figures.tick
        : nodeWarn
            ? figures.warning
            : figures.cross;
    const os = platform();
    const isWin = os === `win32`;
    const osGood = !isWin;
    const osColor = osGood ? `green` : `red`;
    const osFigure = osGood ? figures.tick : figures.cross;
    return (_jsxs(Box, { flexDirection: "column", gap: 1, children: [_jsx(Text, { color: "blue", children: "System requirements" }), _jsxs(Box, { flexDirection: "column", children: [_jsxs(Box, { flexDirection: "row", gap: 1, children: [_jsxs(Text, { color: nodeColor, children: [nodeFigure, ` `, "node:"] }), _jsx(Text, { children: process.version })] }), _jsxs(Box, { flexDirection: "row", gap: 1, children: [_jsxs(Text, { color: osColor, children: [osFigure, ` `, "os:"] }), _jsx(Text, { children: os })] })] }), nodeWarn && (_jsxs(Box, { flexDirection: "column", gap: 1, children: [_jsx(Text, { bold: true, color: "yellow", children: "Warning" }), _jsxs(Text, { children: ["Please upgrade to Node v18 for long-term support. You are running node $", process.version, "."] })] })), nodeBad && (_jsx(Error, { error: new BudError(`node-version`, {
                    details: `Please upgrade to Node v18 for long-term support. You are running node ${process.version}.`,
                    docs: new URL(`https://bud.js.org/guides/getting-started`),
                }) }))] }));
};
