/**
 * Props for Bud errors
 */
interface BudErrorProps extends Error {
    details: string;
    docs: URL;
    file: {
        module: any;
        name: string;
        path: string;
        sha1: string;
    };
    instance: string;
    isBudError: true;
    issue: URL;
    message: string;
    origin: BudError | Error | string;
    thrownBy: string;
}
/**
 * Error base class
 */
declare class BudError extends Error {
    static normalize(error: unknown): BudError;
    /**
     * Details
     */
    details: false | string;
    /**
     * Documentation URL
     */
    docs: false | URL;
    /**
     * Information about file related to error
     */
    file: {
        module: any;
        name: string;
        path: string;
        sha1: string;
    };
    /**
     * Instance name containing error
     */
    instance: `default` | string;
    /**
     * Used to identify Bud errors
     */
    isBudError: boolean;
    /**
     * Issue tracker URL
     */
    issues: false | URL;
    /**
     * Error display name
     */
    name: string;
    /**
     * Original error
     */
    origin: BudError | Error | string;
    /**
     * Name of method that threw error
     */
    thrownBy: false | string;
    /**
     * Class constructor
     */
    constructor(message: string, options?: Partial<BudErrorProps>);
}
/**
 * ModuleError
 */
declare class ModuleError extends BudError {
    name: string;
}
/**
 * ConfigError
 */
declare class ConfigError extends BudError {
    name: string;
}
/**
 * InputError
 */
declare class InputError extends BudError {
    name: string;
}
/**
 * CompilerError
 */
declare class CompilerError extends BudError {
    name: string;
}
/**
 * ServerError
 */
declare class ServerError extends BudError {
    name: string;
}
/**
 * ExtensionError
 */
declare class ExtensionError extends BudError {
    name: string;
}
export { BudError, CompilerError, ConfigError, ExtensionError, InputError, ModuleError, ServerError, };
