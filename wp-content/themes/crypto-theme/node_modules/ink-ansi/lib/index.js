"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeString = void 0;
const React = require("react");
const ink_1 = require("ink");
const ansiRegex = require("ansi-regex");
const { visible } = require('unicoderegexp');
function stripAnsiControlCharacters(str) {
    return str.replace(ansiRegex(), (str) => (str.endsWith('m') ? str : ''));
}
function stripSpecialCharacters(str) {
    // we leave `\u001b` in to allow for setting colours via ansi escape sequences
    // you should make sure to use stripAnsiControlCharacters though.
    return str
        .replace(/\t/g, ' ')
        .replace(/\r?\n/g, ' ')
        .split('')
        .filter((c) => c === '\u001b' || visible.test(c) || / /.test(c))
        .join('');
    // return str.replace(/[^\u0020-\u007e\u00a1-\u024f\u001b]/g, '');
}
function normalizeString(str) {
    return stripSpecialCharacters(stripAnsiControlCharacters(str));
}
exports.normalizeString = normalizeString;
function recursivelyNormalize(children) {
    return React.Children.map(children, (child) => {
        if (typeof child === 'string') {
            return normalizeString(child);
        }
        if (React.isValidElement(child) &&
            (child.type === InkAnsiText || child.type === ink_1.Text)) {
            return {
                ...child,
                type: ink_1.Text,
                props: {
                    ...child.props,
                    children: recursivelyNormalize(child.props.children),
                },
            };
        }
        if (Array.isArray(child)) {
            return recursivelyNormalize(child);
        }
        return child;
    });
}
const InkAnsiText = React.memo(({ children, ...otherProps }) => {
    return React.createElement(ink_1.Text, Object.assign({}, otherProps), recursivelyNormalize(children));
});
InkAnsiText.displayName = 'InkAnsiText';
exports.default = InkAnsiText;
module.exports = Object.assign(InkAnsiText, {
    default: InkAnsiText,
    normalizeString,
});
//# sourceMappingURL=index.js.map