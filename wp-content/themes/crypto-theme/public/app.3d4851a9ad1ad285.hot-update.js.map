{"version":3,"file":"app.3d4851a9ad1ad285.hot-update.js","mappings":";;;;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AA5FA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@roots/bud/sage/sage/./scripts/components/CryptoTable.vue"],"sourcesContent":["\nimport axios from 'axios';\nimport CryptoItem from './CryptoItem.vue';\nimport CryptoModal from './CryptoModal.vue';\n\nexport default {\n  data: function () {\n    return {\n      coins: [],\n      selectedCurrency: 'eur',\n      userInput: '',\n      sortKey: null,\n      sortOrder: 1,\n      selectedCoin: null,\n      modalActive: false,\n    };\n  },\n  mounted() {\n    setTimeout(() => {\n      this.loadCoins();\n    }, 1500);\n  },\n  methods: {\n    getSelectedCoin(value) {\n      console.log(value);\n    },\n    toggleModal() {\n      this.modalActive = !this.modalActive;\n    },\n    isModalActive(value) {\n      this.modalActive = value;\n    },\n    updateModal(newSelectedCoin) {\n      this.selectedCoin = newSelectedCoin;\n    },\n    loadCoins: function () {\n      axios\n        .get(this.getApiUrl())\n        .then((response) => {\n          this.coins = response.data;\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    changeCurrency: function (currency) {\n      this.selectedCurrency = currency;\n      this.coins = [];\n      setTimeout(() => {\n        this.loadCoins();\n      }, 1500);\n    },\n    getApiUrl: function () {\n      return `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${this.selectedCurrency}&order=market_cap_desc&per_page=10&page=1&sparkline=false&locale=en&x_cg_demo_api_key=CG-Dja2R2rhxMMJ9bYxERe3D27n`;\n    },\n    logUserInput: function () {\n      const filteredCoins = this.coins.filter((coin) => {\n        const lowerCaseInput = this.userInput.toLowerCase();\n        return (\n          coin.name.toLowerCase().includes(lowerCaseInput) ||\n          coin.symbol.toLowerCase().includes(lowerCaseInput)\n        );\n      });\n      if (this.userInput && filteredCoins.length > 0) {\n        return (this.coins = filteredCoins);\n      } else {\n        return this.loadCoins();\n      }\n    },\n    sortTable: function (key) {\n      if (this.sortKey === key) {\n        this.sortOrder *= -1;\n      } else {\n        this.sortKey = key;\n        this.sortOrder = 1;\n      }\n      this.coins.sort((a, b) => {\n        const aValue = a[key];\n        const bValue = b[key];\n\n        return (\n          (typeof aValue === 'string'\n            ? aValue.localeCompare(bValue)\n            : aValue - bValue) * this.sortOrder\n        );\n      });\n    },\n  },\n  components: {\n    CryptoItem,\n    CryptoModal,\n  },\n};\n"],"names":[],"sourceRoot":""}